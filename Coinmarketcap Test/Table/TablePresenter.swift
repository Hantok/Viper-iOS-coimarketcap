//
//  TablePresenter.swift
//  Coinmarketcap Test
//
//  Created by Roman Slysh on 9/5/18.
//  Copyright (c) 2018 Roman. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class TablePresenter {

    // MARK: - Private properties -

    private unowned var _view: TableViewInterface
    private var _interactor: TableInteractorInterface
    private var _wireframe: TableWireframeInterface
    fileprivate var _cache: NSCache<NSString, UIImage> = NSCache()

    // MARK: - Lifecycle -

    init(wireframe: TableWireframeInterface, view: TableViewInterface, interactor: TableInteractorInterface) {
        _wireframe = wireframe
        _view = view
        _interactor = interactor
    }
}

// MARK: - Extensions -

extension TablePresenter: TablePresenterInterface {
    func getCoins(start: Int = 1, complation: @escaping CoinCallback) {
        MarketCapService.tickerRequest(start: start) { coins in
            complation(coins)
        }
    }

    func getImage(id: Int, complation: @escaping ImageCallback) {
        if let image = self._cache.object(forKey: "\(id)" as NSString) {
            DispatchQueue.main.async {
                complation(image)
            }
        } else {
            MarketCapService.loadImage(id) { image in
                if let img = image {
                    self._cache.setObject(img, forKey: "\(id)" as NSString)
                }
                complation(image)
            }
        }
    }

    func showCoinInfo(coin: Coin) {
        let message = "\(coin.symbol) = \(coin.price) USD \nVolume 24h = \(coin.volume24h)\nChange 1h = \(coin.persentChange1h)\nChange 24h = \(coin.persentChange24h)\nChange 7d = \(coin.persentChange7d)"
        let alert = UIAlertController(title: coin.name, message: message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
        _view.show(alert, animated: true)
    }
}
